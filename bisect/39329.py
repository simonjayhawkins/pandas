from datetime import datetime
from math import nan

import pandas as pd

print(pd.__version__)


def dt(datestr):
    return datetime.strptime(datestr, "%Y-%m-%d")


df = pd.DataFrame(
    data={
        "Date_reported": {
            0: dt("2020-07-23"),
            1: dt("2020-07-24"),
            2: dt("2020-07-25"),
            3: dt("2020-07-26"),
            4: dt("2020-07-27"),
            5: dt("2020-07-28"),
            6: dt("2020-07-29"),
            7: dt("2020-07-30"),
            8: dt("2020-07-31"),
            9: dt("2020-08-01"),
            10: dt("2020-08-02"),
            11: dt("2020-08-03"),
            12: dt("2020-08-04"),
            13: dt("2020-08-05"),
            14: dt("2020-08-06"),
            15: dt("2020-07-23"),
            16: dt("2020-07-24"),
            17: dt("2020-07-25"),
            18: dt("2020-07-26"),
            19: dt("2020-07-27"),
            20: dt("2020-07-28"),
            21: dt("2020-07-29"),
            22: dt("2020-07-30"),
            23: dt("2020-07-31"),
            24: dt("2020-08-01"),
            25: dt("2020-08-02"),
            26: dt("2020-08-03"),
            27: dt("2020-08-04"),
            28: dt("2020-08-05"),
            29: dt("2020-08-06"),
        },
        "ISO_3_CODE": {
            0: "AFG",
            1: "AFG",
            2: "AFG",
            3: "AFG",
            4: "AFG",
            5: "AFG",
            6: "AFG",
            7: "AFG",
            8: "AFG",
            9: "AFG",
            10: "AFG",
            11: "AFG",
            12: "AFG",
            13: "AFG",
            14: "AFG",
            15: "H63",
            16: "H63",
            17: "H63",
            18: "H63",
            19: "H63",
            20: "H63",
            21: "H63",
            22: "H63",
            23: "H63",
            24: "H63",
            25: "H63",
            26: "H63",
            27: "H63",
            28: "H63",
            29: "H63",
        },
        "Cumulative_cases": {
            0: 35915,
            1: 35981,
            2: 36036,
            3: 36157,
            4: 36263,
            5: 36368,
            6: 36471,
            7: 36542,
            8: 36542,
            9: 36710,
            10: 36710,
            11: 36710,
            12: 36747,
            13: 36829,
            14: 36896,
            15: 47194,
            16: 47856,
            17: 48448,
            18: 48952,
            19: 49388,
            20: 49825,
            21: 50409,
            22: 51000,
            23: 51380,
            24: 51942,
            25: 52265,
            26: 52490,
            27: 52771,
            28: 53457,
            29: 53877,
        },
        "Regional_office": {
            0: "ROAP",
            1: "ROAP",
            2: "ROAP",
            3: "ROAP",
            4: "ROAP",
            5: "ROAP",
            6: "ROAP",
            7: "ROAP",
            8: "ROAP",
            9: "ROAP",
            10: "ROAP",
            11: "ROAP",
            12: "ROAP",
            13: "ROAP",
            14: "ROAP",
            15: nan,
            16: nan,
            17: nan,
            18: nan,
            19: nan,
            20: nan,
            21: nan,
            22: nan,
            23: nan,
            24: nan,
            25: nan,
            26: nan,
            27: nan,
            28: nan,
            29: nan,
        },
    }
)
result = df.groupby(["ISO_3_CODE"]).resample("W", on="Date_reported").min()

print(result)
